openapi: 3.0.3
info:
  title: Image Management API
  version: 1.0.0
  description: An API for managing images and users
servers:
  - url: https://example.com/api/v1
paths:
  /users:
    get:
      summary: Get a list of users
      description: Returns a list of all users
      tags:
        - Users
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user
      tags:
        - Users
      security:
        - basicAuth: []
      requestBody:
        description: User object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a user by ID
      description: Returns a single user
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      description: Updates a user
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      description: Deletes a user
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
  /devices:
    post:
      summary: Register a device
      description: Registers a device and returns an API key
      tags:
        - Devices
      security:
        - basicAuth: []
      requestBody:
        description: Device object that needs to be registered
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
  /images:
    get:
      summary: Get a list of images
      description: Returns a list of all images
      tags:
        - Images
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
    /{id}:
      get:
        summary: Get an image by ID
        description: Returns a single image
        tags:
          - Images
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: ID of image to return
            required: true
            schema:
              type: integer
              format: int64
          - name: X-API-Key
            in: header
            description: API key for the device
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Image'
                encoding:
                  binary:
                    contentType: image/jpeg
      components:
        schemas:
          User:
            type: object
            properties:
              id:
                type: integer
                format: int64
              username:
                type: string
              password:
                type: string
              role:
                type: string
                enum: [user, admin]
          Device:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              user_id:
                type: integer
                format: int64
          ApiKey:
            type: object
            properties:
              api_key:
                type: string
          Image:
            type: object
            properties:
              id:
                type: integer
                format: int64
              metadata:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata'
          Metadata:
            type: object
            additionalProperties:
              type: string
securitySchemes:
  basicAuth:
    type: http
    scheme: basic
  apiKey:
    type: apiKey
    name: X-API-Key
    in: header
                
